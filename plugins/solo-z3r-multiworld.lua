local plugin = {}

plugin.name = "Solo Z3R Multiworld"
plugin.author = "authorblues"

plugin.settings =
{
}

plugin.description =
[[
	Intended to work with seeds generated by Aerinon's Z3 DoorRandomizer fork. Untested with keydropshuffle and shopsanity, so those features currently may or may not work. (https://github.com/aerinon/ALttPDoorRandomizer)

	Create a multiworld randomizer seed and generate roms for all players. Put them all in the games/ folder, and the plugin will shuffle like normal, sending items between seeds when necessary.

	Special thanks to Aerinon for offering significant help to get this working. Thanks also to Ankou for helping me sort out weird SNES+Bizhawk issues.
]]

local this_player_id

local rom_name_addr = 0x7FC0 -- 15 bytes
local outgoing_item_addr = 0x02D8
local outgoing_player_addr = 0xC098
local incoming_item_addr = 0xF4D2
local incoming_player_addr = 0xF4D3
local recv_count_addr = 0xF4F0 -- 2 bytes

local is_game_loaded = {
    [0x00] = false, --Triforce / Zelda startup screens
    [0x01] = false, --Game Select screen
    [0x02] = false, --Copy Player Mode
    [0x03] = false, --Erase Player Mode
    [0x04] = false, --Name Player Mode
    [0x05] = false, --Loading Game Mode
    [0x06] = true,  --Pre Dungeon Mode
    [0x07] = true,  --Dungeon Mode
    [0x08] = true,  --Pre Overworld Mode
    [0x09] = true,  --Overworld Mode
    [0x0A] = true,  --Pre Overworld Mode (special overworld)
    [0x0B] = true,  --Overworld Mode (special overworld)
    [0x0C] = true,  --???? I think we can declare this one unused, almost with complete certainty.
    [0x0D] = true,  --Blank Screen
    [0x0E] = true,  --Text Mode/Item Screen/Map
    [0x0F] = true,  --Closing Spotlight
    [0x10] = true,  --Opening Spotlight
    [0x11] = true,  --Happens when you fall into a hole from the OW.
    [0x12] = true,  --Death Mode
    [0x13] = true,  --Boss Victory Mode (refills stats)
    [0x14] = false, --History Mode (Title Screen Demo)
    [0x15] = true,  --Module for Magic Mirror
    [0x16] = true,  --Module for refilling stats after boss.
    [0x17] = false, --Restart mode (save and quit)
    [0x18] = true,  --Ganon exits from Agahnim's body. Chase Mode.
    [0x19] = true,  --Triforce Room scene
    [0x1A] = false, --End sequence
    [0x1B] = false, --Screen to select where to start from (House, sanctuary, etc.)
}

local function is_normal_gameplay()
	local game_mode = mainmemory.read_s8(0x0010)
	return is_game_loaded[game_mode]
end

function plugin.on_setup(data, settings)
	data.itemqueues = data.itemqueues or {}
end

function read_BCD_to_delimiter(addr, stop)
	local result = 0
	while 1 do
		local value = memory.read_s8(addr, "CARTROM")
		if value == stop then break end
		result = (result * 10) + (value - 0x30)
		addr = addr + 1
	end

	return result, addr+1
end

function plugin.on_game_load(data, settings)
	--this_player_id = tonumber(get_current_game():match("_P(%d+)_"))
	local version, team_id = 0, 0
	local addr = rom_name_addr + 2

	version, addr = read_BCD_to_delimiter(addr, 0x5F)
	team_id, addr = read_BCD_to_delimiter(addr, 0x5F)
	this_player_id = read_BCD_to_delimiter(addr, 0x5F)

	data.itemqueues[this_player_id] = data.itemqueues[this_player_id] or {}
end

function plugin.on_frame(data, settings)
	local player_id, item_id
	if is_normal_gameplay() then
		player_id = mainmemory.read_s8(outgoing_player_addr)
		item_id = mainmemory.read_s8(outgoing_item_addr)

		local prev_player = data.prev_player or 0
		data.prev_player = player_id

		if player_id ~= 0 and prev_player == 0 then
			data.itemqueues[player_id] = data.itemqueues[player_id] or {}
			table.insert(data.itemqueues[player_id], {item=item_id, player=this_player_id})

			mainmemory.write_s8(outgoing_player_addr, 0)
			data.prev_player = 0
		end

		local queue_len = #data.itemqueues[this_player_id]
		local recv_count = mainmemory.read_s16_le(recv_count_addr)
		if mainmemory.read_s16_le(recv_count_addr) > queue_len then
			mainmemory.write_s16_le(recv_count_addr, 0)
			recv_count = 0
		end

		if recv_count < queue_len and mainmemory.read_s8(incoming_item_addr) == 0 then
			local obj = data.itemqueues[this_player_id][recv_count+1]
			mainmemory.write_s8(incoming_item_addr, obj.item)
			mainmemory.write_s8(incoming_player_addr, obj.player)
			mainmemory.write_s16_le(recv_count_addr, recv_count+1)
		end
	end
end

return plugin
